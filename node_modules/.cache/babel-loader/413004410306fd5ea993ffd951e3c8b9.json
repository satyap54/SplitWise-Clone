{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/satyabrat/Desktop/Learn/React/bill-split/src/Components/Summary.js\";\nimport React, { Component } from \"react\";\n\nclass Summary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.calculateTransactions = () => {\n      const {\n        personList,\n        paymentList,\n        numberOfPeople\n      } = this.props;\n      let paid = {},\n          n = numberOfPeople,\n          willGet = {},\n          transactions = [];\n      personList.forEach(person => {\n        paid[person.name] = 0;\n        willGet[person.name] = 0;\n      });\n      paymentList.forEach(payment => {\n        paid[payment.paidBy] += parseInt(payment.amount);\n      });\n\n      for (let i = 0; i < n; i++) {\n        let curr = personList[i];\n\n        for (let j = i + 1; j < n; j++) {\n          let other = personList[j];\n          if (paid[curr.name] === paid[other.name]) continue;\n          let transaction = Math.abs(paid[curr.name] - paid[other.name]);\n          transaction /= (n - 1) * 1.0;\n          if (paid[curr.name] >= paid[other.name]) transactions.push([other, curr, transaction]);else transactions.push([curr, other, transaction]);\n        }\n      }\n\n      console.log(transactions);\n    };\n\n    this.calculateTransactions();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Summary;","map":{"version":3,"sources":["/home/satyabrat/Desktop/Learn/React/bill-split/src/Components/Summary.js"],"names":["React","Component","Summary","constructor","props","calculateTransactions","personList","paymentList","numberOfPeople","paid","n","willGet","transactions","forEach","person","name","payment","paidBy","parseInt","amount","i","curr","j","other","transaction","Math","abs","push","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAA+B;AAC3BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAKlBC,qBALkB,GAKM,MAAI;AACxB,YAAM;AAACC,QAAAA,UAAD;AAAaC,QAAAA,WAAb;AAA0BC,QAAAA;AAA1B,UAA4C,KAAKJ,KAAvD;AACA,UAAIK,IAAI,GAAG,EAAX;AAAA,UAAeC,CAAC,GAAGF,cAAnB;AAAA,UAAmCG,OAAO,GAAG,EAA7C;AAAA,UAAiDC,YAAY,GAAG,EAAhE;AACAN,MAAAA,UAAU,CAACO,OAAX,CAAmBC,MAAM,IAAI;AACzBL,QAAAA,IAAI,CAACK,MAAM,CAACC,IAAR,CAAJ,GAAoB,CAApB;AACAJ,QAAAA,OAAO,CAACG,MAAM,CAACC,IAAR,CAAP,GAAuB,CAAvB;AACH,OAHD;AAKAR,MAAAA,WAAW,CAACM,OAAZ,CAAoBG,OAAO,IAAI;AAC3BP,QAAAA,IAAI,CAACO,OAAO,CAACC,MAAT,CAAJ,IAAwBC,QAAQ,CAACF,OAAO,CAACG,MAAT,CAAhC;AACH,OAFD;;AAKA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,CAAnB,EAAsBU,CAAC,EAAvB,EAA0B;AACtB,YAAIC,IAAI,GAAGf,UAAU,CAACc,CAAD,CAArB;;AACA,aAAI,IAAIE,CAAC,GAAGF,CAAC,GAAG,CAAhB,EAAmBE,CAAC,GAAGZ,CAAvB,EAA0BY,CAAC,EAA3B,EAA8B;AAC1B,cAAIC,KAAK,GAAGjB,UAAU,CAACgB,CAAD,CAAtB;AACA,cAAGb,IAAI,CAACY,IAAI,CAACN,IAAN,CAAJ,KAAoBN,IAAI,CAACc,KAAK,CAACR,IAAP,CAA3B,EACI;AAEJ,cAAIS,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASjB,IAAI,CAACY,IAAI,CAACN,IAAN,CAAJ,GAAkBN,IAAI,CAACc,KAAK,CAACR,IAAP,CAA/B,CAAlB;AACAS,UAAAA,WAAW,IAAK,CAACd,CAAC,GAAG,CAAL,IAAU,GAA1B;AAEA,cAAGD,IAAI,CAACY,IAAI,CAACN,IAAN,CAAJ,IAAmBN,IAAI,CAACc,KAAK,CAACR,IAAP,CAA1B,EACIH,YAAY,CAACe,IAAb,CAAkB,CAACJ,KAAD,EAAQF,IAAR,EAAcG,WAAd,CAAlB,EADJ,KAGIZ,YAAY,CAACe,IAAb,CAAkB,CAACN,IAAD,EAAOE,KAAP,EAAcC,WAAd,CAAlB;AACP;AACJ;;AAEDI,MAAAA,OAAO,CAACC,GAAR,CAAYjB,YAAZ;AACH,KApCiB;;AAEd,SAAKP,qBAAL;AACH;;AAmCDyB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA7C0B;;AAgD/B,eAAe5B,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Summary extends Component{\n    constructor(props){\n        super(props);\n        this.calculateTransactions();\n    }\n\n    calculateTransactions = ()=>{\n        const {personList, paymentList, numberOfPeople} = this.props;\n        let paid = {}, n = numberOfPeople, willGet = {}, transactions = [];\n        personList.forEach(person => {\n            paid[person.name] = 0;\n            willGet[person.name] = 0;\n        });\n\n        paymentList.forEach(payment => {\n            paid[payment.paidBy] += parseInt(payment.amount);\n        });\n\n\n        for(let i = 0; i < n; i++){\n            let curr = personList[i];\n            for(let j = i + 1; j < n; j++){\n                let other = personList[j];\n                if(paid[curr.name] === paid[other.name])\n                    continue;\n\n                let transaction = Math.abs(paid[curr.name] - paid[other.name]);\n                transaction /= ((n - 1) * 1.0);\n\n                if(paid[curr.name] >= paid[other.name])\n                    transactions.push([other, curr, transaction])\n                else\n                    transactions.push([curr, other, transaction])\n            }\n        }\n\n        console.log(transactions);\n    }\n\n    render() {\n        return (\n            <div>\n                Summary\n            </div>\n        )\n    }\n}\n\nexport default Summary;"]},"metadata":{},"sourceType":"module"}